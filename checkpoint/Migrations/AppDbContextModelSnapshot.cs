// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using ProjetoEF.Data;

#nullable disable

namespace checkpoint.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetoEF.Models.RM551605_Fornecedor", b =>
                {
                    b.Property<int>("idFornecedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idFornecedor"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("NVARCHAR2(2)");

                    b.Property<string>("dsEndereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)");

                    b.Property<string>("nrCEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("NVARCHAR2(9)");

                    b.HasKey("idFornecedor");

                    b.ToTable("RM551605_FORNECEDOR");

                    b.HasData(
                        new
                        {
                            idFornecedor = 1,
                            Cidade = "São Paulo",
                            Estado = "SP",
                            dsEndereco = "Rua A, 100",
                            nrCEP = "01000-000"
                        },
                        new
                        {
                            idFornecedor = 2,
                            Cidade = "Campinas",
                            Estado = "SP",
                            dsEndereco = "Rua B, 200",
                            nrCEP = "02000-000"
                        },
                        new
                        {
                            idFornecedor = 3,
                            Cidade = "Rio de Janeiro",
                            Estado = "RJ",
                            dsEndereco = "Rua C, 300",
                            nrCEP = "03000-000"
                        },
                        new
                        {
                            idFornecedor = 4,
                            Cidade = "Niterói",
                            Estado = "RJ",
                            dsEndereco = "Rua D, 400",
                            nrCEP = "04000-000"
                        },
                        new
                        {
                            idFornecedor = 5,
                            Cidade = "Belo Horizonte",
                            Estado = "MG",
                            dsEndereco = "Rua E, 500",
                            nrCEP = "05000-000"
                        },
                        new
                        {
                            idFornecedor = 6,
                            Cidade = "Uberlândia",
                            Estado = "MG",
                            dsEndereco = "Rua F, 600",
                            nrCEP = "06000-000"
                        },
                        new
                        {
                            idFornecedor = 7,
                            Cidade = "Salvador",
                            Estado = "BA",
                            dsEndereco = "Rua G, 700",
                            nrCEP = "07000-000"
                        },
                        new
                        {
                            idFornecedor = 8,
                            Cidade = "Feira de Santana",
                            Estado = "BA",
                            dsEndereco = "Rua H, 800",
                            nrCEP = "08000-000"
                        },
                        new
                        {
                            idFornecedor = 9,
                            Cidade = "Curitiba",
                            Estado = "PR",
                            dsEndereco = "Rua I, 900",
                            nrCEP = "09000-000"
                        },
                        new
                        {
                            idFornecedor = 10,
                            Cidade = "Londrina",
                            Estado = "PR",
                            dsEndereco = "Rua J, 1000",
                            nrCEP = "10000-000"
                        });
                });

            modelBuilder.Entity("ProjetoEF.Models.RM551605_Pedido", b =>
                {
                    b.Property<int>("idPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPedido"));

                    b.Property<DateTime>("dataPedido")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<decimal>("valorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("idPedido");

                    b.ToTable("RM551605_PEDIDO");

                    b.HasData(
                        new
                        {
                            idPedido = 1,
                            dataPedido = new DateTime(2025, 8, 28, 19, 16, 34, 242, DateTimeKind.Local).AddTicks(9374),
                            valorTotal = 150.00m
                        },
                        new
                        {
                            idPedido = 2,
                            dataPedido = new DateTime(2025, 8, 29, 19, 16, 34, 245, DateTimeKind.Local).AddTicks(1277),
                            valorTotal = 500.00m
                        },
                        new
                        {
                            idPedido = 3,
                            dataPedido = new DateTime(2025, 8, 30, 19, 16, 34, 245, DateTimeKind.Local).AddTicks(1300),
                            valorTotal = 250.00m
                        },
                        new
                        {
                            idPedido = 4,
                            dataPedido = new DateTime(2025, 8, 31, 19, 16, 34, 245, DateTimeKind.Local).AddTicks(1302),
                            valorTotal = 700.00m
                        },
                        new
                        {
                            idPedido = 5,
                            dataPedido = new DateTime(2025, 9, 1, 19, 16, 34, 245, DateTimeKind.Local).AddTicks(1303),
                            valorTotal = 1300.00m
                        },
                        new
                        {
                            idPedido = 6,
                            dataPedido = new DateTime(2025, 9, 2, 19, 16, 34, 245, DateTimeKind.Local).AddTicks(1305),
                            valorTotal = 200.00m
                        },
                        new
                        {
                            idPedido = 7,
                            dataPedido = new DateTime(2025, 9, 3, 19, 16, 34, 245, DateTimeKind.Local).AddTicks(1306),
                            valorTotal = 320.00m
                        },
                        new
                        {
                            idPedido = 8,
                            dataPedido = new DateTime(2025, 9, 4, 19, 16, 34, 245, DateTimeKind.Local).AddTicks(1307),
                            valorTotal = 80.00m
                        },
                        new
                        {
                            idPedido = 9,
                            dataPedido = new DateTime(2025, 9, 5, 19, 16, 34, 245, DateTimeKind.Local).AddTicks(1308),
                            valorTotal = 400.00m
                        },
                        new
                        {
                            idPedido = 10,
                            dataPedido = new DateTime(2025, 9, 6, 19, 16, 34, 245, DateTimeKind.Local).AddTicks(1309),
                            valorTotal = 1000.00m
                        });
                });

            modelBuilder.Entity("ProjetoEF.Models.RM551605_Produto", b =>
                {
                    b.Property<int>("idProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProduto"));

                    b.Property<string>("nmProduto")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR2(150)");

                    b.Property<decimal>("preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("idProduto");

                    b.ToTable("RM551605_PRODUTO");

                    b.HasData(
                        new
                        {
                            idProduto = 1,
                            nmProduto = "Mouse",
                            preco = 50.00m
                        },
                        new
                        {
                            idProduto = 2,
                            nmProduto = "Teclado",
                            preco = 120.00m
                        },
                        new
                        {
                            idProduto = 3,
                            nmProduto = "Monitor",
                            preco = 800.00m
                        },
                        new
                        {
                            idProduto = 4,
                            nmProduto = "Notebook",
                            preco = 3500.00m
                        },
                        new
                        {
                            idProduto = 5,
                            nmProduto = "Impressora",
                            preco = 700.00m
                        },
                        new
                        {
                            idProduto = 6,
                            nmProduto = "HD Externo",
                            preco = 400.00m
                        },
                        new
                        {
                            idProduto = 7,
                            nmProduto = "SSD",
                            preco = 500.00m
                        },
                        new
                        {
                            idProduto = 8,
                            nmProduto = "Cabo HDMI",
                            preco = 35.00m
                        },
                        new
                        {
                            idProduto = 9,
                            nmProduto = "Fonte ATX",
                            preco = 250.00m
                        },
                        new
                        {
                            idProduto = 10,
                            nmProduto = "Headset",
                            preco = 150.00m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
